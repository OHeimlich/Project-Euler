__author__ = 'oheimlic'

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonaci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import math
x = (1+math.sqrt(5))/2
y = 1-x
def f(n):
    return int((math.pow(x,n) - math.pow(y,n)) / (math.sqrt(5)))
n=1
z=0
list=[]
while(z<4000000):
    z= f(n)
    n+=1
    if z<=4000000 and z % 2 == 0:
        list.append(z)
print sum(list)
print n

